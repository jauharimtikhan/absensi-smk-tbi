import{a as F,u,h as L,c as n,i as A}from"./button-CJTtMwL8.js";import{j as o,r as s}from"./app-C9tQhv_Z.js";import{c as G,a as H}from"./index-CQA42a1l.js";import{c as D,R as W,P as q,W as V,C as Y,T as B,D as J,a as v,O as K,b as Q}from"./index-SJC72_OY.js";/**
 * @license lucide-react v0.511.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const U=[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",key:"wmoenq"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]],Re=F("triangle-alert",U);var x="AlertDialog",[X,_e]=G(x,[D]),i=D(),N=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(W,{...r,...t,modal:!0})};N.displayName=x;var Z="AlertDialogTrigger",ee=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Q,{...l,...r,ref:a})});ee.displayName=Z;var ae="AlertDialogPortal",y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(q,{...r,...t})};y.displayName=ae;var te="AlertDialogOverlay",R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(K,{...l,...r,ref:a})});R.displayName=te;var c="AlertDialogContent",[oe,re]=X(c),se=L("AlertDialogContent"),_=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),z=u(a,p),m=s.useRef(null);return o.jsx(V,{contentName:c,titleName:h,docsSlug:"alert-dialog",children:o.jsx(oe,{scope:t,cancelRef:m,children:o.jsxs(Y,{role:"alertdialog",...g,...l,ref:z,onOpenAutoFocus:H(l.onOpenAutoFocus,d=>{var f;d.preventDefault(),(f=m.current)==null||f.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(se,{children:r}),o.jsx(ie,{contentRef:p})]})})})});_.displayName=c;var h="AlertDialogTitle",j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(B,{...l,...r,ref:a})});j.displayName=h;var b="AlertDialogDescription",w=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});w.displayName=b;var le="AlertDialogAction",C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(v,{...l,...r,ref:a})});C.displayName=le;var E="AlertDialogCancel",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=re(E,t),g=i(t),p=u(a,l);return o.jsx(v,{...g,...r,ref:p})});P.displayName=E;var ie=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${b}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ne=N,ce=y,S=R,T=_,O=C,M=P,$=j,I=w;const he=ne,de=ce,k=s.forwardRef(({className:e,...a},t)=>o.jsx(S,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));k.displayName=S.displayName;const pe=s.forwardRef(({className:e,...a},t)=>o.jsxs(de,{children:[o.jsx(k,{}),o.jsx(T,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));pe.displayName=T.displayName;const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});ge.displayName="AlertDialogHeader";const me=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});me.displayName="AlertDialogFooter";const fe=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n("text-lg font-semibold",e),...a}));fe.displayName=$.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));ue.displayName=I.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx(O,{ref:t,className:n(A(),e),...a}));Ae.displayName=O.displayName;const De=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n(A({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));De.displayName=M.displayName;export{he as A,Re as T,pe as a,ge as b,fe as c,ue as d,me as e,De as f,Ae as g};
