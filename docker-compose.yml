version: "3.8"

services:
    app:
        build: .
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/app.ini
        environment:
            - APP_ENV=production
            - APP_KEY=
            - APP_DEBUG=false
            - DB_HOST=db
            - DB_PORT=3306
            - DB_DATABASE=${DB_DATABASE:-laravel}
            - DB_USERNAME=${DB_USERNAME:-laravel}
            - DB_PASSWORD=${DB_PASSWORD:-secret}
        depends_on:
            - db
        networks:
            - app-network

    webserver:
        image: nginx:alpine
        container_name: laravel-webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - .:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        depends_on:
            - app
        networks:
            - app-network

    db:
        image: mysql:8.0
        container_name: laravel-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-laravel}
            MYSQL_USER: ${DB_USERNAME:-laravel}
            MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_secret}
        volumes:
            - dbdata:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - app-network

    node:
        image: node:20
        container_name: laravel-node
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        command: sh -c "npm run install && npm run dev"
        environment:
            - NODE_ENV=development
        ports:
            - "5173:5173"
        depends_on:
            - app
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
